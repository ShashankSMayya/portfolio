---
const { img, name, role, company, location, testimonial, featured = false } = Astro.props;
import { Image } from "astro:assets";
---

<div class={`testimonial-card group relative rounded-lg ${featured ? 'bg-primary/5' : 'bg-base-100'} border ${featured ? 'border-primary/20' : 'border-base-content/10'} hover:border-primary/30 transition-all duration-300 hover:shadow-lg overflow-hidden h-full flex flex-col`}>
    <!-- Quote icon -->
    <div class="absolute top-4 right-4 opacity-10">
        <svg class="w-12 h-12 text-primary" fill="currentColor" viewBox="0 0 24 24">
            <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-9.983zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h3.983v10h-9.983z"/>
        </svg>
    </div>
    
    <div class="relative p-6 flex flex-col flex-1 space-y-4">
        <!-- Header with Avatar and Details -->
        <div class="flex items-start space-x-3">
            {
                img && (
                    <div class="relative flex-shrink-0">
                        <div class="w-12 h-12 rounded-full overflow-hidden ring-2 ring-base-content/10">
                            <Image
                                src={img}
                                width={80}
                                height={80}
                                format="webp"
                                alt={name}
                                class="w-full h-full object-cover"
                            />
                        </div>
                        {featured && (
                            <div class="absolute -bottom-1 -right-1 w-5 h-5 bg-primary rounded-full flex items-center justify-center">
                                <svg class="w-3 h-3 text-primary-content" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                                </svg>
                            </div>
                        )}
                    </div>
                )
            }
            <div class="flex-1 min-w-0">
                <h3 class="text-lg font-semibold text-base-content">
                    {name}
                </h3>
                {role && (
                    <p class="text-sm text-primary">{role}</p>
                )}
                <p class="text-sm text-base-content/60">{company}</p>
                {location && (
                    <p class="text-xs text-base-content/50 flex items-center mt-1">
                        <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        </svg>
                        {location}
                    </p>
                )}
            </div>
        </div>
        
        <!-- Testimonial Content -->
        <div class="relative testimonial-content flex-1" data-testimonial={testimonial}>
            <p class="text-base-content/70 leading-relaxed text-sm italic line-clamp-4">
                "{testimonial}"
            </p>
            {testimonial.length > 200 && (
                <button class="read-more-btn mt-2 inline-flex items-center text-sm font-medium text-primary hover:text-primary/80 transition-colors">
                    <span class="read-more-text">Read more</span>
                    <svg class="w-3 h-3 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                    </svg>
                </button>
            )}
        </div>
        
        <!-- Rating Stars -->
        <div class="flex items-center justify-between mt-auto pt-3">
            <div class="flex items-center space-x-0.5">
                {[...Array(5)].map((_, i) => (
                    <svg class="w-4 h-4 text-amber-500 fill-current" viewBox="0 0 24 24">
                        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                    </svg>
                ))}
            </div>
            <span class="text-xs text-base-content/50">Verified</span>
        </div>
    </div>
</div>

<style>
    .line-clamp-4 {
        overflow: hidden;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 4;
    }
    
    .line-clamp-none {
        -webkit-line-clamp: unset;
    }
</style>

<script>
    function handleReadMoreClick(e) {
        const btn = e.target.closest('.read-more-btn');
        if (!btn) return;
        
        e.preventDefault();
        e.stopPropagation();
        
        const container = btn.closest('.testimonial-content');
        const paragraph = container?.querySelector('p');
        const btnText = btn.querySelector('.read-more-text');
        
        if (paragraph && btnText) {
            if (paragraph.classList.contains('line-clamp-4')) {
                paragraph.classList.remove('line-clamp-4');
                paragraph.classList.add('line-clamp-none');
                btnText.textContent = 'Read less';
            } else {
                paragraph.classList.add('line-clamp-4');
                paragraph.classList.remove('line-clamp-none');
                btnText.textContent = 'Read more';
            }
        }
    }
    
    document.addEventListener('click', handleReadMoreClick);
    
    document.addEventListener('astro:after-swap', () => {
        document.removeEventListener('click', handleReadMoreClick);
        document.addEventListener('click', handleReadMoreClick);
    });
</script>